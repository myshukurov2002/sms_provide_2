package com.example.service;import com.example.dto.ApiResponse;import okhttp3.*;import org.codehaus.jackson.map.ObjectMapper;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.HttpEntity;import org.springframework.http.HttpHeaders;import org.springframework.http.HttpMethod;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;@Servicepublic class SmsSenderService {    @Value("${my.eskiz.url}")    private String TOKEN_URL;    @Value("${my.send.sms.url}")    private String SMS_URL;    @Value("${my.test.url}")    private String TEST_URL;    @Value("${my.token}")    private String TOKEN;    @Value("${my.eskiz.uz.email}")    private String EMAIL;    @Value("${my.eskiz.uz.password}")    private String PASSWORD;    private ObjectMapper objectMapper = new ObjectMapper();    public ApiResponse send(String phone, String message, String text) {        OkHttpClient client = new OkHttpClient();        MediaType mediaType = MediaType.parse("application/json; charset=utf-8");        String jsonBody = "{\"phone\":\"" + phone + "\", \"message\":\"" + message + "\"}";        RequestBody body = RequestBody.create(mediaType, jsonBody);        Request request = new Request.Builder()                .url(TOKEN_URL)                .addHeader("Content-Type", "application/json")                .addHeader("Authorization", "Basic " + Credentials.basic(EMAIL, PASSWORD))                .post(body)                .build();        try {            Response response = client.newCall(request).execute();            if (response.isSuccessful()) {                return new ApiResponse(true, "REQUEST WAS SUCCESSFUL! Response: " + response.body());            } else {                return new ApiResponse(false, "FAILED TO SEND REQUEST! Response: " + response.body());            }        } catch (Exception e) {            return new ApiResponse(false, "FAILED TO SEND REQUEST! Exception: " + e.getMessage());        }    }    public String getToken() {        HttpHeaders headers = new HttpHeaders();        headers.setContentType(org.springframework.http.MediaType.APPLICATION_JSON);        headers.setBearerAuth(TOKEN);        String requestBody = "{\"email\":\"" + EMAIL + "\", \"password\":\"" + PASSWORD + "\"}";        HttpEntity<String> requestEntity = new HttpEntity<>(requestBody, headers);        RestTemplate restTemplate = new RestTemplate();        ResponseEntity<String> response = restTemplate.exchange(TOKEN_URL, HttpMethod.POST, requestEntity, String.class);        if (response.getStatusCode().is2xxSuccessful()) {            String jsonResponse = response.getBody();            String[] arr = jsonResponse.split("\"");            if (arr.length > 8) {                return arr[9];            }//            try {//                ObjectMapper objectMapper = new ObjectMapper(); // TODO//                TokenResponse tokenResponse = objectMapper.readValue(jsonResponse, TokenResponse.class);////                return tokenResponse.getData().getToken();//            } catch (IOException e) {//                throw new RuntimeException(e);//            }//        }//            ExecutorService executor = Executors.newSingleThreadExecutor();//TODO////            try {//                Future<ResponseEntity<String>> future = executor.submit(() ->//                        restTemplate.exchange(TOKEN_URL, HttpMethod.POST, requestEntity, String.class));//                // Wait 10 seconds//                ResponseEntity<String> responseEntity = future.get(10, TimeUnit.SECONDS);////                if (responseEntity.getStatusCode().is2xxSuccessful()) {//                    return new ApiResponse(true, responseEntity.getBody());//                } else {//                    return new ApiResponse(false, "FAILED TO SEND REQUEST! Response: " + responseEntity.getBody());//                }//            } finally {//                executor.shutdown();//            }//        } catch (Exception e) {//            throw new RuntimeException(e);//        }        }        return null;    }    public ApiResponse sendSMS(String PHONE, String MESSAGE, String TEXT) {        String token = getToken();        if (token == null) {            return new ApiResponse(false, "Token is invalid!");        }        if (PHONE.startsWith("+")) {            PHONE = PHONE.substring(1);        }        String requestBody = "{\"mobile_phone\":\"" + PHONE + "\", \"message\":\"" + MESSAGE + "\", \"from\":\"4546\", \"callback_url\":\"" + TEST_URL + "\"}";        HttpHeaders headers = new HttpHeaders();        headers.setContentType(org.springframework.http.MediaType.APPLICATION_JSON);        headers.setBearerAuth(token);        HttpEntity<String> request = new HttpEntity<>(requestBody, headers);        RestTemplate restTemplate = new RestTemplate();        ResponseEntity<String> response = restTemplate.exchange(SMS_URL, HttpMethod.POST, request, String.class);        if (response.getStatusCode().is2xxSuccessful()) {            return new ApiResponse(true, response.getBody());        }        return new ApiResponse(false, response.getBody());    }}