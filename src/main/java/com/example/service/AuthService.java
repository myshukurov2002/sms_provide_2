package com.example.service;import com.example.dto.ApiResponse;import com.example.dto.JwtDTO;import com.example.dto.ProfileDTO;import com.example.entity.ClientEntity;import com.example.entity.SmsEntity;import com.example.enums.Status;import com.example.repository.ClientRepository;import com.example.repository.SmsRepository;import jakarta.validation.Valid;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.Optional;@Servicepublic class AuthService {    @Autowired    private SmsRepository smsRepository;    @Autowired    private ClientRepository clientRepository;    @Autowired    private SmsSenderService smsSenderService;    public ApiResponse create(JwtDTO jwt, @Valid ProfileDTO dto) {        Optional<ClientEntity> optClient = clientRepository.findByLogin(jwt.getLogin());        if (optClient.isPresent()) {            ClientEntity client = optClient.get();            if (client.getStatus().equals(Status.ACTIVE) &&                    client.getPassword().equals(jwt.getPasswd())) {                    ApiResponse response = smsSenderService                            .sendSMS(dto.getPhone(), dto.getMessage(), dto.getText());                    if (response.getStatus()) {                        SmsEntity entity = new SmsEntity();                        entity.setMessage(dto.getMessage());                        entity.setCompanyId(client.getId());                        entity.setPhone(dto.getPhone());                        smsRepository.save(entity);                        return new ApiResponse(true, "SUCCESSFUL SEND SMS! response: " + response);                    }                }        }        return new ApiResponse(false, "FAILED SEND SMS!");    }}